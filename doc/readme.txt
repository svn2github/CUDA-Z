
ReadMe.txt
==========

This small document may answer some of your questions about what you need
for using and building CUDA-Z.

What is CUDA-Z?
---------------

CUDA-Z is a small simple utility showing information about CUDA devices
installed in your PC/notebook or whatever you call computer.

What is CUDA?
-------------

CUDA is a NVIDIA's Compute Unified Device Architecture. You can get more
information about it from page CUDA ZONE at NVIDIA's website
http://www.nvidia.com/object/cuda_home.html

What is CUDA-device?
--------------------

It is simple... It is a device that supports CUDA. NVIDIA call it 
"CUDA-enabled products".
http://www.nvidia.com/object/cuda_learn_products.html

What I need for running CUDA-Z utility?
---------------------------------------

You need CUDA-device and CUDA driver for your OS.
Download CUDA-Z binary package from http://sourceforge.net/projects/cuda-z/ ,
run it and have fun!

What I need for building CUDA-Z from sources?
---------------------------------------------

In Windows you need:
1. Microsoft Visual C++ 2005 (not 2008!). Having Express edition is enough.
   Unfortunately you can't program CUDA with MinGW32 or Cygwin because NVIDIA
   doesn't support this compilers in Windows environment.
   Install also last Windows Platform SDK.
   http://www.microsoft.com/express/2005/
2. Qt 4.4.0 (OpenSource) or close to it. You should build Qt with
   Microsoft Visual C++ 2005 (Qt built with MinGW will not be linked with
   code generated by MS Visual C++).
   http://trolltech.com/downloads/opensource
   The best way to distribute CUDA-Z is to make it as much as possible DLLs
   independent. To reach this goal you should build Qt static.
   Read following links to make it right.
   http://wiki.qtcentre.org/index.php?title=Building_static_Qt_on_Windows
   http://wiki.qtcentre.org/index.php?title=Building_static_applications
   Additionally, it's good to make our binary file independent from
   msvc?80.dll. To make this you should change some variables in settings of
   Qt: mkspecs/win32-msvc2005/qmake.conf:
   QMAKE_CFLAGS_RELEASE	= -O2 -MT
   QMAKE_CFLAGS_DEBUG	= -Zi -MTd
   QMAKE_LFLAGS_WINDOWS	= /SUBSYSTEM:WINDOWS
   Build Qt with new configuration file again
   IMPORTANT: CUDA-Z package release must be linked with static Qt!
   My smallest version of Qt configured with commandline:
   # configure.exe -release -static -no-exceptions -no-accessibility
                   -no-stl -no-sql-sqlite -no-qt3support -no-opengl
                   -platform win32-msvc2005 -no-gif -no-libmng -no-libtiff
                   -no-libjpeg -vcproj -dsp -no-incredibuild-xge -no-rtti
                   -no-3dnow -no-sse -no-sse2 -no-openssl -no-dbus
                   -no-phonon -no-webkit -no-style-plastique
                   -no-style-cleanlooks -no-style-motif -no-style-cde
3. CUDA driver and CUDA toolkit installed on your computer.
   http://www.nvidia.com/object/cuda_get.html
   After generation of EXE file, it still needs cudart.dll... :-(

Now you have enough tools for building CUDA-Z. I would recommend you to add
all binary folders of installed tools to system PATH variable or tovsvars32.bat
that lives in your "X:\Programme\Microsoft Visual Studio 8\Common7\Tools\" .
Now open Visual Studio 2005 Command Prompt, go to folder where you have placed
source of CUDA-Z and type:
   > qmake
   > nmake
If no error occurs you will found cuda-z.exe in ./bin folder.

To make binary release package for windows you should additionally install
NSIS 2.37 (or higher) and add it's folder in system PATH variable.
Copy necessary libraries cudart.dll to ./bin folder from CUDA toolkit
bin folder. Than you can generate package by calling in
Visual Studio 2005 Command Prompt:
   > nmake pkg-win32

I didn't try to build CUDA-Z in Linux and MacOS X, but it should be even
easier comparing to Windows. You can get gcc and g++ from your OS distributer
(XCode tools in case of MacOS X). You still have to download or build Qt and
CUDA driver and tools packages from NVIDIA website. Have fun! :-)
Give me your feedback will it work out?

--
AG
